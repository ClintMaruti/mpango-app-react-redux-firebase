{"version":3,"sources":["component/layout/SignedInLinks.js","store/actions/authActions.js","component/layout/SignedOutLinks.js","component/layout/Navbar.js","component/dashboard/Notifications.js","component/projects/ProjectSummary.js","component/projects/ProjectList.js","component/dashboard/Dashboard.js","component/projects/ProjectDetails.js","component/auth/SignIn.js","component/auth/SignUp.js","store/actions/projectActions.js","component/projects/createProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","component/config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","iniState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da8d4ec6.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floatin pink lighten-1'>{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())        \n    }\n}\n\nexport default connect(null,mapDispatchToProps)(SignedInLinks);\n","export const signin = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n           credentials.email,\n           credentials.password \n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS'})\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Signup</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>            \n        </ul>\n    )\n}\n\nexport default SignedOutLinks;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>\n    return(\n        <nav className=\"nav-wrapper gret darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">Mpango</Link>\n                { links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            { notifications && notifications.map(item =>{\n              return (\n                <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content} </span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n                </li>)\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications","import React from 'react';\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary  from './ProjectSummary';\nimport  { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return (\n                    <Link to={'/project/' + project.id} key={project.id}>\n                    <ProjectSummary project={project}/>\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react'\nimport Notifications from  './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n    render(){\n        // console.log(this.props)\n        const { projects, auth, notifications } = this.props\n        if(!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                            </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                            </div>\n                    </div>\n                </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects', orderBy: ['createdAt','desc']},\n        {collection: 'notifications', limit: 3, orderBy: ['time','desc']}\n    ])\n)(Dashboard);\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n    const { project, auth} = props;\n    if(!auth.uid) return <Redirect to='/signin' />\n    if (project) {\n        return (\n        <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n                <span className=\"card-title\">{ project.title }</span>\n                <p>{ project.content }</p>                \n            </div>\n            <div className=\"card-action gret lighten-4 grey-text\">\n                <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\n                <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\n            </div>\n        </div>\n    </div>\n    )\n    } else {\n        return (\n        <div className=\"container center\">\n            <p>Loading projects...</p>\n        </div>\n        )\n }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects'}\n    ])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signin } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signIn(this.state)\n    }\n  render() {\n    const { authError, auth } = this.props\n    if(auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                <div className=\"red-text center\">\n                    { authError ? <p>{authError}</p> : null} \n                </div>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signin(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signUp(this.state)\n    }\n  render() {\n    const { auth, authError } = this.props\n    if(auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            </div>\n            <div className=\"red-text center\">\n                { authError ? <p> { authError } </p> : null }\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({type: 'CREATE_PROJECT', project});\n        }).catch((err) => {\n            dispatch({type: 'CREATE_PROJECT_ERROR', err});\n        })\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        // console.log(this.state)\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n  render() {\n    const { auth } = this.props\n    if(!auth.uid) return <Redirect to='/signin' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Create Your Project Here</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"content\">Project Content</label>\n                <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            </div>\n            <div className=\"input-field\">\n                <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './component/layout/Navbar'\nimport Dashboard from './component/dashboard/Dashboard';\nimport ProjectDetails from './component/projects/ProjectDetails'\nimport SignIn from './component/auth/SignIn'\nimport SignUp from './component/auth/SignUp'\nimport CreateProject from './component/projects/createProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const iniState = {\n    authError: null\n}\n\nconst authReducer = (state = iniState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('login error')\n            return {                \n                ...state,\n                authError: 'Login Failed!'\n                }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')   \n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('signup succes')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n            default:\n                return state\n    }\n}\n\nexport default authReducer","const iniState = {\n    projects: [\n        {id: 1, title: 'My city', content: 'blah blah blah'},\n        {id: 2, title: 'Portmore', content: 'blah blah blah'},\n        {id: 3, title: 'Merch', content: 'blah blah blah'},\n    ]\n}\n\nconst projectReducer = (state = iniState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project)\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err)\n            return state;\n        default:\n            return state;\n    }   \n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n  // Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: \"AIzaSyBzqLKRUbiy17lVdH6Y35MMK6GquSJcD0U\",\n    authDomain: \"mpango-app-fca5e.firebaseapp.com\",\n    databaseURL: \"https://mpango-app-fca5e.firebaseio.com\",\n    projectId: \"mpango-app-fca5e\",\n    storageBucket: \"\",\n    messagingSenderId: \"101372503731\",\n    appId: \"1:101372503731:web:9bc37e865e8fa263\"\n  };  \n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({ timestampsInSnapshots: true });\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport  fbConfig from './component/config/fbConfig';\n\nconst store = createStore(rootReducer, \n    compose(\n    applyMiddleware(thunk.withExtraArgument({\n    getFirebase,\n    getFirestore\n})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig,{useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n));\n\nstore.firebaseAuthIsReady.then(() => {\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n})"],"sourceRoot":""}